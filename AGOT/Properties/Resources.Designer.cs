//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.239
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AGOT.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AGOT.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;ArrayOfAttackOption xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
        ///  &lt;AttackOption&gt;
        ///    &lt;Name&gt;Called Shot (Basic)&lt;/Name&gt;
        ///    &lt;Abstract&gt;AT -4 penalty&lt;/Abstract&gt;
        ///    &lt;Description&gt;&amp;lt;p&amp;gt;An attacking character may attack a specific point (the head, a hand, etc.) by taking a -4 penalty. If the target is exceptionally small (an eye, for example), the GM may increase the penalty to -6 or use the Called Shot to Vita [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string attackoptions {
            get {
                return ResourceManager.GetString("attackoptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;ArrayOfFeat xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
        ///  &lt;Feat&gt;
        ///    &lt;Type&gt;G&lt;/Type&gt;
        ///    &lt;Name&gt;Armour Proficiency (Light)&lt;/Name&gt;
        ///    &lt;Prerequisites&gt;&lt;/Prerequisites&gt;
        ///    &lt;Abstract&gt;Ignore armour check penalty&lt;/Abstract&gt;
        ///    &lt;Benefit&gt;When you wear a type of armour with which you are proficient, you can ignore the
        ///armour check penalty to attacks and Ride checks.&lt;/Benefit&gt;
        ///    &lt;Special&gt;&lt;/Special&gt;
        ///    &lt;Descrip [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string feats {
            get {
                return ResourceManager.GetString("feats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die !---
        ///Table 2-3: Social Status and ECL Modifiers
        ///RANK|ECL MODIFIER***|DESCRIPTION
        ///0|+0|Respected Smallfolk / Hedge Knight / Sellsword / Novice Maester
        ///1|+0*|Sworn Sword / Household Servant / Lesser Merchant / Acolyte Maester
        ///2|+1|House Retainer / Landed Knight / Merchant / Maester
        ///3|+2|Member of a Minor House / Greater Landed Knight / Greater Merchant
        ///4|+3|Member of a Great House
        ///5|+4|Member of the Royal Family
        ///(6)|+4**|King (or ruling Queen)
        ///EndTable
        ///* To progress from Social Status rank 0 to ran [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string tables {
            get {
                return ResourceManager.GetString("tables", resourceCulture);
            }
        }
    }
}
